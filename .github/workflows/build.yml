name: Build with Emscripten

on:
  workflow_dispatch:
    inputs:
      deploy:
        type: boolean
        description: Publish to website
        default: false
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]

# inputs:
#   deploy:
#     description: 'If true then the output is published to the website.'
#     required: false
#     default: 'false'

env:
  EM_VERSION: 3.1.64
  EM_CACHE_FOLDER: emsdk-cache

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Setup Emscripten SDK cache
      id: cache-system-libraries
      uses: actions/cache@v4
      with:
        path: ${{ env.EM_CACHE_FOLDER }}
        key: emsdk-${{ env.EM_VERSION }}-${{ runner.os }}-${{ runner.arch }}

    - name: Setup Emscripten SDK
      uses: mymindstorm/setup-emsdk@v14
      with:
        version: ${{ env.EM_VERSION }}
        actions-cache-folder: ${{ env.EM_CACHE_FOLDER }}
        cache-key: emsdk-${{ env.EM_VERSION }}-${{ runner.os }}-${{ runner.arch }}

    - name: Download xtensor
      uses: actions/checkout@v4
      with:
        repository: xtensor-stack/xtensor
        path: lib/xtensor
        sparse-checkout: include/xtensor
        sparse-checkout-cone-mode: false

    - name: Download xtl
      uses: actions/checkout@v4
      with:
        repository: xtensor-stack/xtl
        path: lib/xtl
        sparse-checkout: include/xtl
        sparse-checkout-cone-mode: false

    - name: Build with Emscripten
      working-directory: ./web
      run: >
        em++ --bind -s MODULARIZE=1 -s EXPORT_NAME=FissionOpt -s ALLOW_MEMORY_GROWTH=1
        -o FissionOpt.js -std=c++17 -flto -O3 Bindings.cpp
        ../Fission.cpp ../OptFission.cpp ../FissionNet.cpp
        ../OverhaulFission.cpp ../OptOverhaulFission.cpp ../OverhaulFissionNet.cpp
        -I../lib/xtensor/include -I../lib/xtl/include

    - name: Archive web distribution
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: |
          web
          !web/compile.bat
          !web/*.cpp

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    if: github.event.inputs.deploy == 'true'
    needs: build
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Download web distribution
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
