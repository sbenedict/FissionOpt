name: Build with Emscripten

on:
  workflow_dispatch
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]

env:
  EM_CACHE_FOLDER: emsdk-cache

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Setup Emscripten SDK cache
      uses: actions/cache@v2
      with:
        path: ${{env.EM_CACHE_FOLDER}}
        key: emsdk-${{ runner.os }}

    - name: Setup Emscripten SDK
      uses: mymindstorm/setup-emsdk@v14
      with:
        actions-cache-folder: ${{env.EM_CACHE_FOLDER}}

    - name: Download xtensor
      uses: actions/checkout@v4
      with:
        repository: xtensor-stack/xtensor
        path: lib/xtensor
        sparse-checkout: include/xtensor
        sparse-checkout-cone-mode: false

    - name: Download xtl
      uses: actions/checkout@v4
      with:
        repository: xtensor-stack/xtl
        path: lib/xtl
        sparse-checkout: include/xtl
        sparse-checkout-cone-mode: false

    - name: Build with Emscripten
      working-directory: ./web
      run: >
        em++ --bind -s MODULARIZE=1 -s EXPORT_NAME=FissionOpt -s ALLOW_MEMORY_GROWTH=1
        -o FissionOpt.js -std=c++17 -flto -O3 Bindings.cpp
        ../Fission.cpp ../OptFission.cpp ../FissionNet.cpp
        ../OverhaulFission.cpp ../OptOverhaulFission.cpp ../OverhaulFissionNet.cpp
        -I../lib/xtensor/include -I../lib/xtl/include

    - name: Archive web distribution
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: |
          web
          !web/compile.bat
          !web/*.cpp
